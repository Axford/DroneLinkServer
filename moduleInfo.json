{
    "Depth": {
        "type": [
            "Depth"
        ],
        "inherits": [
            "Drone"
        ],
        "description": [
            "Manages a simple Depth sensor (sonar transducer) controlled via Trigger and Echo pins"
        ],
        "guide": [
            "Notes:\nIn the oceans the speed of sound varies between 1,450 and 1,570 metres per second or 0.145 cm per microsecond.\nGiven the transducer requires the sound pulse to travel to the bottom and back the effective distance per microsend is actually halved or 0.0725 cm per microsecond."
        ],
        "config": [
            "// New Depth sensor bound to channel 30\nDepth.new 30\n  name \"Depth\"\n  status true         // enabled\n  interval 1000       // sample once per second\n  pins OUT0_0 OUT0_1  // tigger and echo pins\n  limits 0.25 10      // set sensor range to min=0.25m, max=10m\n  speed 1480          // speed of sound in fresh water = 1480m/s\n  $location [@>5.8]   // subscribe to GPS location\n  distance 5          // publish log entires every 5m\n\n  .publish \"depth\"    // publish the measured depth\n  .publish \"log\"      // publish a combined log entry containing GPS location and depth\n\n  // .publish \"speed\"\n  // .publish \"pins\"\n  // .publish \"limits\"\n  // .publish \"distance\"\n.done"
        ],
        "pub": [
            {
                "address": 10,
                "type": "u8",
                "numValues": 2,
                "name": "pins",
                "description": "Pin connections for the depth module (Trigger, Echo)"
            },
            {
                "address": 11,
                "type": "f",
                "numValues": 1,
                "name": "speed",
                "description": "Set the speed of sound in water (default 1480 for fresh water)"
            },
            {
                "address": 12,
                "type": "f",
                "numValues": 2,
                "name": "limits",
                "description": "Min and max depth limits in meters (Default 0.25 10)"
            },
            {
                "address": 13,
                "type": "f",
                "numValues": 1,
                "name": "depth",
                "description": "Measured depth (or zero if unable to measure)"
            },
            {
                "address": 14,
                "type": "f",
                "numValues": 3,
                "name": "log",
                "description": "Composite log entry combining current GPS location and depth reading into a single param"
            },
            {
                "address": 15,
                "type": "f",
                "numValues": 1,
                "name": "distance",
                "description": "Minimum distance between log entires.  Will only publish a fresh log entry if more than distance from last sample location.  Default 0m."
            }
        ],
        "sub": [
            {
                "address": 20,
                "addrAddress": 21,
                "type": "f",
                "numValues": 2,
                "name": "location",
                "description": "Current location from GPS"
            }
        ],
        "filename": [
            "../DroneNode/src/droneModules/DepthModule.h"
        ]
    },
    "HMC5883L": {
        "type": [
            "HMC5883L"
        ],
        "inherits": [
            "I2CBaseModule"
        ],
        "description": [
            "Manages a HMC5883L I2C Compass"
        ],
        "guide": [
            "Explain here how the module works, key subs and pubs\n<b>html is allowed</b>\nmultiple-lines are preserved"
        ],
        "pub": [
            {
                "address": 10,
                "type": "f",
                "numValues": 4,
                "name": "vector",
                "description": "Raw magnetic field vector"
            },
            {
                "address": 11,
                "type": "f",
                "numValues": 1,
                "name": "heading",
                "description": "Heading adjusted for magnetic declination"
            },
            {
                "address": 12,
                "type": "f",
                "numValues": 1,
                "name": "declination",
                "description": "Current declination value"
            },
            {
                "address": 13,
                "type": "f",
                "numValues": 3,
                "name": "calibX",
                "description": "Min, center and max magnetic readings for the X axis"
            },
            {
                "address": 14,
                "type": "f",
                "numValues": 3,
                "name": "calibY",
                "description": "Min, center and max magnetic readings for the Y axis"
            },
            {
                "address": 15,
                "type": "f",
                "numValues": 1,
                "name": "trim",
                "description": "Manual calibration value to adjust heading to match hull (e.g. for a misaligned physical mount)"
            }
        ],
        "sub": [
            {
                "address": 16,
                "addrAddress": 17,
                "type": "f",
                "numValues": 2,
                "name": "location",
                "description": "Current location from GPS"
            }
        ],
        "filename": [
            "../DroneNode/src/droneModules/HMC5883LModule.h"
        ]
    },
    "Management": {
        "type": [
            "Management"
        ],
        "inherits": [
            "Drone"
        ],
        "description": [
            "Provides overall system management and a pub/sub interface to the DroneModuleManager"
        ],
        "guide": [
            "todo"
        ],
        "pub": [
            {
                "address": 8,
                "type": "c",
                "numValues": 1,
                "name": "hostname",
                "description": "Hostname of the device"
            },
            {
                "address": 9,
                "type": "c",
                "numValues": 1,
                "name": "build",
                "description": "Git commit hash at the time the firmware was built"
            },
            {
                "address": 10,
                "type": "u8",
                "numValues": 1,
                "name": "reset",
                "description": "Set to 1 to trigger a reset"
            },
            {
                "address": 11,
                "type": "u32",
                "numValues": 1,
                "name": "heap",
                "description": "Current size of heap (i.e. free memory)"
            },
            {
                "address": 12,
                "type": "u8",
                "numValues": 4,
                "name": "IP",
                "description": "IP address"
            },
            {
                "address": 13,
                "type": "u32",
                "numValues": 1,
                "name": "uptime",
                "description": "Uptime in seconds"
            },
            {
                "address": 14,
                "type": "f",
                "numValues": 1,
                "name": "publishRate",
                "description": "Rate of messages published per second"
            },
            {
                "address": 15,
                "type": "u32",
                "numValues": 1,
                "name": "choked",
                "description": "Number of times a channel queue has choked (rejected a msg becuse full)"
            },
            {
                "address": 16,
                "type": "u8",
                "numValues": 1,
                "name": "discovery",
                "description": "Enable/disable node discovery process.  Set to 1 to enable, or 0 to disable."
            },
            {
                "address": 17,
                "type": "c",
                "numValues": 1,
                "name": "macro",
                "description": "Set to the path to a macro file (.txt file) to run the associated macro.  Note - the macro must be loaded first (e.g. via config.txt)."
            },
            {
                "address": 18,
                "type": "u8",
                "numValues": 1,
                "name": "wifi",
                "description": "Enable/disable wifi. Set to 1 to enable, or 0 to disable."
            },
            {
                "address": 19,
                "type": "u32",
                "numValues": 1,
                "name": "sleep",
                "description": "How long to sleep in main loop - uses light sleep"
            },
            {
                "address": 20,
                "type": "u32",
                "numValues": 1,
                "name": "cpu",
                "description": "CPU freq in MHz, valid values 240, 160, 80"
            }
        ],
        "filename": [
            "../DroneNode/src/droneModules/ManagementModule.h"
        ]
    },
    "Motor": {
        "type": [
            "Motor"
        ],
        "inherits": [
            "Drone"
        ],
        "description": [
            "Manages a Motor via an H Bridge module using PWM"
        ],
        "config": [
            "Motor.new 11\n  name \"LeftMotor\"\n  interval 50\n  pins OUT0_0 OUT0_1 DAC0_0\n  PWMChannel 15\n  limits -0.7 0.7\n  deadband 0.3\n  $speed [@>10.8]\n\n  // publish\n  .publish \"speed\"\n.done"
        ],
        "pub": [
            {
                "address": 10,
                "type": "u8",
                "numValues": 3,
                "name": "pins",
                "description": "Pin connections for the H Bridge (A, B, EN)"
            },
            {
                "address": 11,
                "type": "u8",
                "numValues": 1,
                "name": "PWMChannel",
                "description": "Which ESP32 PWM channel to use (default 15)"
            },
            {
                "address": 12,
                "type": "f",
                "numValues": 2,
                "name": "limits",
                "description": "Min and max speed limits in range -1 to 1 (default -1 1)"
            },
            {
                "address": 13,
                "type": "f",
                "numValues": 1,
                "name": "deadband",
                "description": "Input range within which to set the motor output to zero, interpreted abs(input).  Default 0.3"
            }
        ],
        "sub": [
            {
                "address": 8,
                "addrAddress": 9,
                "type": "f",
                "numValues": 1,
                "name": "speed",
                "description": "Desired Motor speed in range -1 to 1"
            }
        ],
        "filename": [
            "../DroneNode/src/droneModules/MotorModule.h"
        ]
    }
}