<html>
<head>

  <link href="https://api.mapbox.com/mapbox-gl-js/v2.5.1/mapbox-gl.css" rel="stylesheet">
  <script src="https://api.mapbox.com/mapbox-gl-js/v2.5.1/mapbox-gl.js"></script>
  <style>
  body { margin: 0; padding: 0; }
  #map { position: absolute; top: 0; bottom: 0; width: 100%; }
  </style>
</head>

<body>
<div id="map"></div>
<script>

const urlSearchParams = new URLSearchParams(window.location.search);
var addr = "2>7.10";
if (urlSearchParams.has("addr")) {
  addr = urlSearchParams.get("addr");
}

mapboxgl.accessToken = 'pk.eyJ1IjoiYXhmb3JkIiwiYSI6ImNqMWMwYXI5MDAwNG8zMm5uanFyeThmZDEifQ.paAXk3S29-VVw1bhk458Iw';

var fetchList = [];

fetchList.push({
  query: '/query?addr='+addr+'&start=240m&aggr=10s&name=location&valueName=value0',
  index:0
});

fetchList.push({
  query: '/query?addr='+addr+'&start=240m&aggr=10s&name=location&valueName=value1',
  index:1
});

Promise.all(
    fetchList.map(fetchTask =>
      fetch(fetchTask.query)
        .then(response => response.json() )
    )
  ).then(sparks => {
    sparks.forEach((spark, i) => {
      fetchList[i].data = spark;
    });

    //console.log(fetchList);

    var data = fetchList[0].data.map(function(e, i) {
       //return { x: e._value, y: fetchList[1].data[i]._value }
       return [ e._value, fetchList[1].data[i]._value ];
    });

    const bbox = [data[0], data[data.length-1]];

    for (var i=0; i<data.length; i++) {
      bbox[0][0] = Math.min( bbox[0][0], data[i][0]);
      bbox[0][1] = Math.min( bbox[0][1], data[i][1]);

      bbox[1][0] = Math.max( bbox[1][0], data[i][0]);
      bbox[1][1] = Math.max( bbox[1][1], data[i][1]);
    }

    const bboxc = [ (bbox[0][0] + bbox[1][0])/2, (bbox[0][1] + bbox[1][1])/2 ];

    console.log(data);

    const map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/satellite-v9',
      center: bboxc,
      zoom: 15
    });
    map.fitBounds(bbox, {
      padding: {top: 50, bottom:50, left: 50, right: 50}
    });


    map.on('load', () => {

      map.setPaintProperty(
        'satellite',
        'raster-opacity',
        0.5
      );

      var config = {
        'type': 'geojson',
        'data': {
          'type': 'Feature',
          'properties': {},
          'geometry': {
            'type': 'LineString',
            'coordinates': [ ]
          }
        }
      };

      // push coordinates
      config.data.geometry.coordinates = data;

      map.addSource('route', config);



      map.addLayer({
        'id': 'route',
        'type': 'line',
        'source': 'route',
        'layout': {
          'line-join': 'round',
          'line-cap': 'round'
        },
        'paint': {
					'line-color': '#00ff00',
					'line-opacity': 0.5,
					'line-width': 3
				}
      });
    });

  });


    /*

    var data = json.map(function(e) {
       return e._value;
    });;
    */


</script>
</body>
</html>
